name: node-manifest

on:
  workflow_call:
    inputs:
      REGISTRY:
        required: true
        type: string
      NODE_TYPE:
        required: false
        type: string
        default: "mempool"
      TAG:
        required: false
        type: string
        default: "latest"

env:
  REGISTRY_IMAGE: ${{ inputs.REGISTRY }}/aiblockofficial/node-${{ inputs.NODE_TYPE }}

jobs:
  create-and-push-manifest:
    name: Create & Push Manifest [${{ inputs.NODE_TYPE }}]
    outputs:
      json: ${{ steps.meta.outputs.json }}
    runs-on: ubuntu-latest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{inputs.NODE_TYPE}}-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ inputs.TAG }}
            type=sha
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

  slack-notification:
    name: Slack Notify [${{ inputs.NODE_TYPE }}]
    needs: [create-and-push-manifest]
    if: always()
    uses: ./.github/workflows/slack-msg.yml
    with:
      heading: ${{ contains(needs.*.result, 'failure') && 'Image Push Failed :red_circle:' || 'Image Push Success :large_green_circle:' }}
      info: "IMAGE: *${{ join(fromJson(needs.create-and-push-manifest.outputs.json).tags, ', ') }}*"
      url: ${{ github.server_url }}/${{ github.repository }}/pkgs/container/node-${{inputs.NODE_TYPE}}
    secrets:
      webhook: ${{ secrets.SLACK_WEBHOOK_URL }}

  # scan-image:
  #   name: Scan Image [${{ inputs.NODE_TYPE }}]
  #   needs: [create-and-push-manifest]
  #   uses: aiblockofficial/workflows/.github/workflows/scan-image.yml@main
  #   secrets: inherit
  #   with:
  #     IMAGE: ${{ fromJson(needs.create-and-push-manifest.outputs.json).tags[0] }}
