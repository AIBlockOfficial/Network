name: node-build

on:
  workflow_call:
    inputs:
      REGISTRY:
        required: true
        type: string
      NODE_TYPE:
        required: false
        type: string
        default: "mempool"
  
env:
  REGISTRY_IMAGE: ${{ inputs.REGISTRY }}/aiblockofficial/node-${{ inputs.NODE_TYPE }}

jobs:
  build:
    name: Build & Push [${{ inputs.NODE_TYPE }}] (${{ matrix.platform}})
    runs-on: ${{ matrix.builder }}
    continue-on-error: false
    strategy:
      fail-fast: true
      matrix:
        include:
        - builder: ubuntu-latest
          platform: linux/amd64
        - builder: ubuntu-latest
          platform: linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push A-Block node by digest
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_TYPE_ARG=${{ inputs.NODE_TYPE }}
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache,mode=max
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{inputs.NODE_TYPE}}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
